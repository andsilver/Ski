= content_for :theme, @property.theme

= content_for :breadcrumbs_and_heading, breadcrumbs_and_heading(@property.breadcrumbs, @heading)

css:
  #slider-content {
    display: none;
  }

  #content.wide {
    float: none;
    width: 100%;
  }

javascript:
  $(function() {
    $('.gallery a').fancyZoom({scaleImg: true, closeOnClick: true});
    calendarControls();
  });

.flip-key-property
  .container-fluid
    h1= @property.name
    .row
      .col-md-8
        - if @property.image
          .cycle-slideshow data-cycle-fx="scrollHorz" data-cycle-timeout="8000" data-cycle-pager="#adv-custom-pager" data-cycle-pager-template="<a href='#' class='fk-thumb'><img src='{{src}}' width=96 height=72></a>"
            .cycle-prev
              span.glyphicon.glyphicon-circle-arrow-left
            .cycle-next
              span.glyphicon.glyphicon-circle-arrow-right
            - @property.images.each do |i|
              = image_tag(i.sized_url([640, 480], :cropped), alt: "Photo of #{@property.name}")
            #adv-custom-pager.center.external
            javascript:
              $(function() {
                $('.cycle-slideshow').cycle();
              });
        .property-details
          ul.details
            - if @property.flip_key_property.bedroom_count
              li= pluralize(@property.flip_key_property.bedroom_count, 'bedroom')
            - if @property.flip_key_property.bathroom_count
              li= pluralize(@property.flip_key_property.bathroom_count, 'bathroom')
            li= "Sleeps #{@property.flip_key_property.occupancy}"
            li= @property.flip_key_property.property_type
          h3 Description from the manager
          p= raw flip_key_property_description(@json)
  
        h2 Location
        p
          = "#{@property.flip_key_property.location_description}, #{@property.flip_key_property.city}"
          br
          = @property.country
        = render partial: 'google_map', locals: { lat: @property.flip_key_property.latitude, lng: @property.flip_key_property.longitude }
        #map_canvas
  
        h2 Availability
        - cal = FlipKeyCalendar.new(@property.flip_key_property)
        .well
          .btn-group
            button.btn.btn-default#earlier
              i.icon-backward>
              | Earlier
            button.btn.btn-default#later
              | Later
              i.icon-forward<
          br
          - today = Date.today
          - month = today.month
          - year = today.year
          - hide = false
          - 24.times do |i|
            .month id="month#{month}#{year}" data-month="#{month}" data-year="#{year}" style="#{'display: none' if hide}"
              = raw cal.show_month(month, year)
            - hide = true if (i + 1) % 3 == 0
            - month += 1
            - if month == 13
              - month = 1
              - year += 1
          .clear

        h2 Rates
        table.table
          thead
            th Dates
            th Nightly
            th Weekly
            th Monthly
            th Minimum Stay
          tbody
            - if @property.flip_key_property.property_rates
              - @property.flip_key_property.property_rates.each do |rate|
                tr
                  td
                    .rate-dates= "#{Date.parse(rate['start_date'][0]).strftime("%b %-d")} - #{Date.parse(rate['end_date'][0]).strftime("%b %-d, %Y")}"
                    .check-in= flip_key_changeover(rate['changeover_day'][0])
                  td= flip_key_rate(@property.flip_key_property, rate['day_min_rate'])
                  td= flip_key_rate(@property.flip_key_property, rate['week_min_rate'])
                  td= flip_key_rate(@property.flip_key_property, rate['month_min_rate'])
                  td= flip_key_minimum_stay(rate)
            tr
              - rate = @property.flip_key_property.property_default_rate
              - if rate
                td
                  .rate-dates
                    - if @property.flip_key_property.property_rates
                      | All other dates
                    - else
                      | All dates
                td= flip_key_rate(@property.flip_key_property, rate['day_min_rate'])
                td= flip_key_rate(@property.flip_key_property, rate['week_min_rate'])
                td= flip_key_rate(@property.flip_key_property, rate['month_min_rate'])
                td= flip_key_minimum_stay(rate)

        - if @property.flip_key_property.amenities.any?
          h2 Amenities
          table.table.table-bordered.table-striped
            - @property.flip_key_property.amenities.each_pair do |category, amenities|
              tr
                th= category
                td= amenities.join ' Â· '

      .col-md-4
        h2 Interested?
        .rates-total
          span.from From:
          br
          span.rental-price= "#{format_currency(@property.flip_key_property.rental_price, Currency.find_by(code: 'USD'))} "
          span.rental-price-scope= @property.flip_key_property.rental_price_scope
        p.request-more-information Request more information
        = form_tag(send_message_flip_key_property_path(@property.flip_key_property))
          javascript:
            $(function() {
              var checkOutDates = {
                #{javascript_check_out_dates(@property.flip_key_property)}
              };
              var checkOutPicker = null;
              var now = new Date();
              var nextYear = new Date();
              nextYear.setYear(now.getFullYear() + 1);
              $('.check-in').pickadate({
                min: now,
                max: nextYear,
                disable: [
                 true,
                 #{javascript_dates(@property.flip_key_property.check_in_dates)}
                ],
                onClose: function() {
                  if(this.get('select') == null) {
                    // check-in date cleared so disable all dates in the
                    // check-out picker, if set
                    if(checkOutPicker) {
                      checkOutPicker.set('clear');
                      checkOutPicker.set('disable', true);
                    }
                  } else {
                    var checkInPicker = this;
                    var checkOuts = checkOutDates[checkInPicker.get('select', 'yyyy-mm-dd')];

                    if(checkOutPicker) {
                      // set to new check-out dates
                      checkOutPicker.set('clear');
                      checkOutPicker.set('disable', true);
                      checkOutPicker.set('disable', checkOuts);
                    } else {
                      // initialize the check-out picker
                      $('.check-out').pickadate({
                        min: now,
                        max: nextYear,
                        disable: checkOuts,
                        onStart: function() {
                          // save a reference to the check-out picker
                          checkOutPicker = this;
                        }
                      });
                    }
                  }
                }
              });
            });
          .enquiry-dates
            .form-group
              = text_field_tag('check_in', '', required: true, class: 'form-control datepicker check-in', placeholder: 'Check-in')
            .form-group
              = text_field_tag('check_out', '', required: true, class: 'form-control datepicker check-out', placeholder: 'Check-out')
          .form-group
            select.form-control name="guests"
              - (1..@property.flip_key_property.occupancy).each do |guests|
                - if guests == @property.flip_key_property.occupancy
                  option= pluralize(guests, 'guest') + ' (max occupancy)'
                - else
                  option= pluralize(guests, 'guest')
          .form-group
            = text_field_tag('name', '', class: 'form-control', placeholder: 'First and last name', required: true)
          .form-group
            = email_field_tag('email', '', class: 'form-control', placeholder: 'Email', required: true)
          .form-group
            = phone_field_tag('phone_number', '', class: 'form-control', placeholder: 'Phone', required: true)
          .form-group
            = text_field_tag('comment', '', class: 'form-control', placeholder: 'Enter a brief message', required: true)
          .form-group
            input.form-control.btn.btn-primary type="submit" value="Send Message"
